# Transportation Route Recommendation System
# .gitignore file for C++ project

# Compiled Object files
*.o
*.obj
*.elf

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# Build directories
build/
bin/
lib/
obj/
dist/
Debug/
Release/
x64/
x86/

# CMake
CMakeCache.txt
CMakeFiles/
CMakeScripts/
Testing/
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps/

# IDE files
# Visual Studio
.vs/
*.vcxproj
*.vcxproj.filters
*.vcxproj.user
*.sln
*.suo
*.user
*.userosscache
*.sln.docstates

# Visual Studio Code
.vscode/
*.code-workspace

# CLion
.idea/
cmake-build-*/

# Code::Blocks
*.layout
*.depend

# Dev-C++
*.dev

# Qt Creator
CMakeLists.txt.user*

# Xcode
*.xcodeproj/
*.xcworkspace/

# Temporary files
*~
*.swp
*.swo
*.tmp
*.temp
.DS_Store
Thumbs.db

# Log files
*.log
logs/

# Generated documentation
docs/html/
docs/latex/
docs/xml/
docs/man/
docs/rtf/
doxygen_warnings.txt

# Coverage reports
*.gcov
*.gcda
*.gcno
coverage/
lcov.info

# Profiling data
gmon.out
perf.data*
*.prof

# Memory check outputs
valgrind-out.txt
*.memcheck

# Package files
*.tar.gz
*.zip
*.deb
*.rpm

# Backup files
*.bak
*.backup
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Data files (temporary)
data/temp/
data/cache/
*.cache

# Configuration overrides
config/local_*.ini
config/user_*.ini
config/*.local

# Runtime generated files
*.pid
*.lock

# Test outputs
test_results/
test_output/

# Dependency management
vcpkg/
conan/
.conan/

# Static analysis reports
cppcheck-report.xml
static_analysis/

# Benchmark results
benchmark_results/
*.benchmark

# Custom user data
user_data/
my_routes/
personal_preferences/

# Editor temporary files
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json

# Python bytecode (if any Python tools are used)
__pycache__/
*.py[cod]
*$py.class

# Java class files (if any Java tools are used)
*.class

# Package Lock files
package-lock.json
yarn.lock

# Node modules (if any JS tools are used)
node_modules/

# Rust target directory (if any Rust tools are used)
target/

# Go binaries (if any Go tools are used)
*.exe~

# Additional C++ specific ignores
# Precompiled headers
*.pch

# Dependency directories
dependencies/
third_party/
external/

# Generated source files
*_generated.cpp
*_generated.h
*_generated.hpp

# Clang specific
.clang_complete
.clang-format

# GCC specific
*.d

# Intel compiler
*.dyn

# Libraries
*.so.*
*.dylib.*

# Archives
*.tar
*.gz
*.bz2
*.xz

# Core dumps
core
core.*

# Address Sanitizer
*.asan

# Thread Sanitizer
*.tsan

# Memory Sanitizer
*.msan

# UndefinedBehavior Sanitizer
*.ubsan

# Custom build outputs
transport_system
transport_system.exe
unit_tests
integration_tests
performance_tests

# Custom data outputs
output/
results/
exports/

# Documentation generation
*.pdf
*.docx
*.html

# Keep important empty directories with .gitkeep
!**/.gitkeep

# But ignore .gitkeep files in build directories
build/**/.gitkeep
bin/**/.gitkeep
lib/**/.gitkeep
obj/**/.gitkeep